"""
Pipeline to estimate fine-scale recombination maps from polymorphism data
Test for convergence of LDhat MCMC chain

Run only one chromosome
"""

configfile: "config.yaml"

"""In addition to the configfile statement, config values can be overwritten via the command line"""
dataset=config["dataset"] # Name of your dataset directory and prefix of your vcf file
chrom=config["chrom"] # Name of the chromosome to analyse in your 'sample' dataset
K=str(config["K"])
pop=str(config["pop"])
bpen=config["interval.bpen"]

wdir=config["workingdir"] + dataset
wdirpop=config["workingdir"] + dataset + "/K" + K + ".pop" + pop
wdirMCMC=config["workingdir"] + dataset + "/K" + K + ".pop" + pop + "/MCMC"

nruns=10

 wildcard_constraints:
     wdir=wdir,
     wdirpop=wdirpop,
     wdirMCMC=wdirMCMC,
     dataset=dataset,
     chrom=chrom,
     K=K,
     pop=pop,
     bpen=bpen,
     nruns=nruns


rule all:
    """
    One ring to rule them all
    """
    input:
        expand("{wdir}/{dataset}.ldhat_MCMC.html", wdir=wdir, dataset=dataset)
    shell:
        "echo 'MCMC convergence assessment: finished'"


rule interval:
    """
    Estimate a recombination landscape with LDhat
    """
    input:
        "{wdirpop}/ldhat/{dataset}.{chrom}.{bpen}.ldhat.sites",
        "{wdirpop}/ldhat/{dataset}.{chrom}.{bpen}.ldhat.locs"
    output:
        expand("{wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{nruns}.new_lk.txt", nruns=nruns),
        expand("{wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{nruns}.bounds.txt", nruns=nruns),
        expand("{wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{nruns}.rates.txt", nruns=nruns),
        temporary(expand("{wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{nruns}.type_table.txt", nruns=nruns))
    conda:
        "envs/vcftools.yaml"
    shell:
        """
        iter={config[interval.iter]}
        samp={config[interval.samp]}
        bpen={config[interval.bpen]}
        for i in {{1..{nruns}}}
        do
        sem -j {config[cores]} singularity exec --bind $PWD:/data ldhat.sif interval -seq /data/{wdirpop}/ldhat/{dataset}.{chrom}.{bpen}.ldhat.sites -loc /data/{wdirpop}/ldhat/{dataset}.{chrom}.{bpen}.ldhat.locs -lk /data/{wdirpop}/ldhat/{dataset}.lookup.{chrom}.new_lk.txt -its $iter -bpen $bpen -samp $samp -prefix /data/{wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.$i
        done
        sem --wait
        """

 rule stat:
     """
     Compute statistics on interval
     """
     input:
         "{wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{run}.new_lk.txt",
         "{wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{run}.bounds.txt",
         "{wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{run}.rates.txt"
    output:
        "{wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{run}.res.txt",
	    "{wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{run}.bounds.txt.gz",
        "{wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{run}.rates.txt.gz"
     shell:
        """
        burn={config[ldhat.burn]}
        singularity exec --bind $PWD:/data ldhat.sif stat -input /data/{wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{wildcards.run}.rates.txt -burn $burn -loc /data/{wdirpop}/ldhat/{dataset}.{chrom}.{bpen}.ldhat.locs -prefix /data/{wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{wildcards.run}
	    gzip -f {wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{wildcards.run}.rates.txt
        gzip -f {wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{wildcards.run}.bounds.txt
	    """

rule MCMC_report:
    """
    Produce a Rmarkdown/pdf report
    """
    input:
        expand("{wdirMCMC}/{dataset}.{chrom}.bpen{bpen}.run.{nruns}.res.txt", nruns=nruns)
    output:
        "{wdir}/{dataset}.ldhat_MCMC.html"
    conda:
        "envs/Renv.yaml"
    shell:
        """
	    Rscript ldhat_MCMC.R {wdirpop} {dataset} {chromosome} {bpen}
	    mv ldhat_MCMC.html {wdir}/{dataset}.ldhat_MCMC.html
        """
