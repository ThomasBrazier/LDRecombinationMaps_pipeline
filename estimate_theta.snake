"""
Snakemake pipeline to estimate fine-scale recombination maps from polymorphism data
"""

"""
Configuration of the analysis
i.e. dataset, name of chromosome, population to sample
"""

"""In addition to the configfile statement, config values can be overwritten via the command line"""
dataset=config["dataset"] # Name of your dataset directory and prefix of your vcf file
chrom=config["chrom"] # Name of the chromosome to analyse in your 'sample' dataset
K=str(config["K"])
pop=str(config["pop"])


wdir=config["workingdir"] + dataset
wdirpop=config["workingdir"] + dataset + "/K" + K + ".pop" + pop


wildcard_constraints:
    wdir=wdir,
    wdirpop=wdirpop,
    dataset=dataset,
    chrom=chrom,
    K=K,
    pop=pop,


rule all:
    """
    One ring to rule them all"
    """
    input:
        target = expand("{wdirpop}/{dataset}.thetaW.txt",wdirpop=wdirpop,dataset=dataset),
    shell:
        "echo 'Finished'"


rule poplist:
    """
    Sample individuals from a given genetic cluster (number of K to retain and name of the cluster) specified in config.yaml
    """
    output:
        "{wdirpop}/poplist",
        temporary("{wdirpop}/structure/cluster.tmp"),
        temporary("{wdirpop}/structure/cluster.tmp2"),
        temporary("{wdirpop}/structure/cluster")
    log:
        "{wdirpop}/logs/poplist.log"
    conda:
        "envs/vcftools.yaml"
    shell:
        """
        perl -ane '$r = 0; for my $i (1 .. $#F) {{$r = $i if $F[$i] > $F[$r];}} print $r + 1, " ";' < {wdir}/structure/faststructure.{K}.meanQ > {wdirpop}/structure/cluster.tmp
        sed -i -e "s/\\s\\+/\\n/g" {wdirpop}/structure/cluster.tmp
        paste {wdir}/indlist {wdirpop}/structure/cluster.tmp > {wdirpop}/structure/cluster.tmp2
        paste {wdirpop}/structure/cluster.tmp2 {wdir}/structure/faststructure.{K}.meanQ > {wdirpop}/structure/cluster
        awk -F' ' '{{if($2=={pop}) print $1}}' {wdirpop}/structure/cluster > {wdirpop}/poplist
        """


rule sampling_pop:
    """
    A first step to trim every 'sample' dataset to the same quality criteria
    Filtering:
    - keep only biallelic
    - perform HWE test on site to remove excess of heterozygotes
    - maf
    - missing data

    And for computation issues, keep only a subset of 100,000 SNPs to estimate Theta
    """
    input:
        "{wdirpop}/poplist"
    output:
    	"{wdirpop}/{dataset}.theta.vcf.gz"
    log:
        "{wdirpop}/logs/{dataset}.sampling_pop.log"
    conda:
        "envs/vcftools.yaml"
    shell:
        """
        # Filter chromosomes and keep only bi-allelic alelles
        vcftools --gzvcf {wdir}/{dataset}.vcf.gz --out {wdirpop}/out --recode --keep {wdirpop}/poplist --maf {config[maf]} --max-missing {config[maxmissing]} --min-alleles 2 --max-alleles 2
        bcftools norm -d all {wdirpop}/out.recode.vcf -o {wdirpop}/out.bcftools.vcf
        # Subset N random SNPs (default=100,000)
	N=100000
	cat {wdirpop}/out.bcftools.vcf | grep '^#' > {wdirpop}/new_vcf.vcf
	cat {wdirpop}/out.bcftools.vcf | grep -v '^#' | shuf -n $N  >> {wdirpop}/new_vcf.vcf
	rm {wdirpop}/out.bcftools.vcf
	rm {wdirpop}/out.recode.vcf
	mv {wdirpop}/new_vcf.vcf {wdirpop}/{dataset}.theta.vcf
	bgzip -f {wdirpop}/{dataset}.theta.vcf
        #tabix --csi {wdirpop}/{dataset}.theta.vcf.gz
	"""

rule effective_size:
     """
     Estimate population effective size
     """
     input:
         "{wdirpop}/{dataset}.pop.vcf.gz"
     output:
         "{wdirpop}/statistics/{dataset}.effective_size"
     log:
         "{wdirpop}/logs/{dataset}.effective_size.log"
     conda:
         "envs/vcftools.yaml"
     params:
         windowsize=100000
     shell:
        """
        vcftools --gzvcf {input} --window-pi {params.windowsize} --out {wdirpop}/statistics/vcftools
        eff_size=$(awk '{{sum+=$5}} END {{sum=(sum/NR)/(4*{config[mu]}); print sum}}' {wdirpop}/statistics/vcftools.windowed.pi)
	# Coalescent Theta Pi
	thetapi=$(expr 4 \* $eff_size \* {config[mu]})
	echo $thetapi > {wdirpop}/statistics/{dataset}.theta.pi 
        """

rule theta:
    """
    Estimate Theta Watterson
    """
    input:
        "{wdirpop}/{dataset}.theta.vcf.gz"
    output:
        "{wdirpop}/{dataset}.thetaW.txt"
    log:
        "{wdirpop}/logs/{dataset}.theta.log"
    conda:
        "envs/Renv.yaml"
    shell:
        """
	Rscript estimate_theta.R {wdirpop}
	mv {wdirpop}/theta.txt {wdirpop}/{dataset}.thetaW.txt
	rm {wdirpop}/{dataset}.theta.vcf.gz
        """
